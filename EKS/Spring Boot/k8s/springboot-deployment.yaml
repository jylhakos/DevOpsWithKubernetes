apiVersion: v1
kind: ServiceAccount
metadata:
  name: springboot-service-account
  namespace: springboot-jwt
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/SpringBootEKSRole
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-deployment
  namespace: springboot-jwt
  labels:
    app: springboot-jwt
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot-jwt
  template:
    metadata:
      labels:
        app: springboot-jwt
    spec:
      serviceAccountName: springboot-service-account
      containers:
      - name: springboot-jwt
        image: YOUR_ECR_REPO_URI/springboot-jwt:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "docker"
        - name: DB_HOST
          value: "mysql-service"
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-database
        - name: DB_USERNAME
          value: "root"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: jwt-secret
        - name: JWT_EXPIRATION
          value: "86400000"
        - name: LOG_LEVEL
          value: "INFO"
        - name: JPA_SHOW_SQL
          value: "false"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for MySQL to be ready..."
          until nc -z mysql-service 3306; do
            echo "MySQL is not ready yet. Waiting..."
            sleep 2
          done
          echo "MySQL is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-service
  namespace: springboot-jwt
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  selector:
    app: springboot-jwt
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 443
    targetPort: 8080
    protocol: TCP
    name: https
  type: LoadBalancer
