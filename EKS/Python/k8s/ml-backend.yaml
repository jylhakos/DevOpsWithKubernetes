apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-backend
  namespace: ml-pipeline
  labels:
    app: ml-backend
    component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-backend
  template:
    metadata:
      labels:
        app: ml-backend
        component: api
    spec:
      containers:
      - name: ml-backend
        image: your-ecr-repo/ml-backend:latest  # Replace with your ECR repository
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          protocol: TCP
        env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: ml-config
              key: flask-env
        - name: FLASK_APP
          value: "app.py"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: MODEL_PATH
          valueFrom:
            configMapKeyRef:
              name: ml-config
              key: model-path
        volumeMounts:
        - name: model-storage
          mountPath: /src/model
          readOnly: true
        livenessProbe:
          httpGet:
            path: /ping
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc
      nodeSelector:
        node.kubernetes.io/instance-type: m5.large
---
apiVersion: v1
kind: Service
metadata:
  name: ml-backend-service
  namespace: ml-pipeline
  labels:
    app: ml-backend
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: ml-backend
