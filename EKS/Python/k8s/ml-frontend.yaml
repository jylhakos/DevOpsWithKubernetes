apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-frontend
  namespace: ml-pipeline
  labels:
    app: ml-frontend
    component: ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-frontend
  template:
    metadata:
      labels:
        app: ml-frontend
        component: ui
    spec:
      containers:
      - name: ml-frontend
        image: your-ecr-repo/ml-frontend:latest  # Replace with your ECR repository
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: REACT_APP_BACKEND_URL
          valueFrom:
            configMapKeyRef:
              name: ml-config
              key: backend-url
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
      nodeSelector:
        node.kubernetes.io/instance-type: t3.medium
---
apiVersion: v1
kind: Service
metadata:
  name: ml-frontend-service
  namespace: ml-pipeline
  labels:
    app: ml-frontend
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: ml-frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
